<?xml version="1.0" encoding="UTF-8"?>
<chapter id="shell">
	<title>MongoDB Shell</title>
	<section id="shutdownServer">
		<title>shutdownServer</title>
		<para>关闭MongoDB数据库</para>
		<screen>
		<![CDATA[
db.shutdownServer()
		]]>
		</screen>
	</section>
	<section id="show">
		<title>show 查看命令</title>
		<section>
			<title>show dbs</title>
			<para>show dbs show database names</para>
			<screen>
			<![CDATA[
> show dbs
local	(empty)
logging	0.203125GB
test	0.203125GB
			]]>
			</screen>
		</section>
		<section>
			<title>show collections</title>
			<para>show collections show collections in current database</para>
			<screen>
			<![CDATA[

> show collections
bios
system.indexes
			]]>
			</screen>
			<para>另一种用法是show tables</para>
			<screen>
			<![CDATA[
> show tables
bios
system.indexes
			]]>
			</screen>
		</section>
		<section>
			<title>show users</title>
			<para>show users show users in current database</para>
			<screen>
			<![CDATA[

			]]>
			</screen>
		</section>
		<section>
			<title>show profile</title>
			<para>show profile show most recent system.profile entries with time >= 1ms</para>
			<screen>
			<![CDATA[
> show profile
db.system.profile is empty
Use db.setProfilingLevel(2) will enable profiling
Use db.system.profile.find() to show raw profile entries
			]]>
			</screen>
		</section>
	</section>
	<section id="use">
		<title>切换数据库</title>
		<screen>
		<![CDATA[
use <db name>                set curent database to <db name>

> use logging
switched to db logging
		]]>
		</screen>
	</section>
	<section id="mongo.collection">
		<title>Collection 管理</title>
		<section>
			<title>创建 Collection</title>
			<screen>
			<![CDATA[
db.createCollection("mycollection")			
			]]>
			</screen>
		</section>
		<section>
			<title>删除 collection</title>
			<screen>
			<![CDATA[
db.collection.drop()			
			]]>
			</screen>			
		</section>
		<section id="unset">
			<title>删除字段</title>
			<screen>
			<![CDATA[
db.getCollection('table').update({},{$unset:{field:1}})			
			]]>
			</screen>
		</section>
	</section>
	<section id="save">
		<title>save</title>
		<para>存储嵌套的对象</para>
		<screen>
		<![CDATA[
db.foo.save({'name':'neo','address':{'city':'shenzhen','post':518000},'phone':[13113668890,13322993040]})
		]]>
		</screen>
		<para>存储数组对象</para>
		<screen>
		<![CDATA[
db.foo.save({'Uid':'netkiller@msn.com','phone':['13322993040','13113668890']})
		]]>
		</screen>
	</section>
	<section id="insert">
		<title>insert</title>
		<screen>
		<![CDATA[
db.bios.insert(
   {
     _id: 1,
     name: { first: 'John', last: 'Backus' },
     birth: new Date('Dec 03, 1924'),
     death: new Date('Mar 17, 2007'),
     contribs: [ 'Fortran', 'ALGOL', 'Backus-Naur Form', 'FP' ],
     awards: [
               {
                 award: 'W.W. McDowell Award',
                 year: 1967,
                 by: 'IEEE Computer Society'
               },
               {
                 award: 'National Medal of Science',
                 year: 1975,
                 by: 'National Science Foundation'
               },
               {
                 award: 'Turing Award',
                 year: 1977,
                 by: 'ACM'
               },
               {
                 award: 'Draper Prize',
                 year: 1993,
                 by: 'National Academy of Engineering'
               }
             ]
   }
)
		]]>
		</screen>
	</section>
	<section id="update">
		<title>update</title>
		<para>根据query条件修改，如果不存在则插入，允许修改多条记录</para>
		<screen>
			db.foo.update({'yy':5},{'$set':{'xx':2}},upsert=true,multi=true)
		</screen>
		<section id="update.multi">
			<title>multi 更新所有数据</title>
			<para>update 第一个参数是条件，当不写条件时将匹配所有数据。</para>
			<screen>
			<![CDATA[
db.getCollection('certificate').update({},{'$set':{'icon':'52bfbb7d92b3f41da2e4103f1990c054990be863.png'}},upsert=false,multi=true)			
			]]>
			</screen>
		</section>
		<section id="update.upsert">
			<title>upsert 更新，如果不存在则插入数据</title>
			<screen>
			<![CDATA[
db.getCollection('shippingAddress').update({'memberId':'00000000'},{'$set':{'defaults': false}},upsert=true,multi=true)
			]]>
			</screen>
		</section>
	</section>
	<section id="remove">
		<title>remove</title>
		<para>删除uid=10的记录</para>
		<screen>
		<![CDATA[
db.foo.remove({'uid':10})
		]]>
		</screen>
		<para>删除所有的记录</para>
		<screen>
		<![CDATA[
db.foo.remove()		
		]]>
		</screen>
		<section>
			<title>删除条件使用 _id </title>
			<screen>
			<![CDATA[
db.foo.remove({ "_id" : ObjectId("56e10b66a22ef1b1408b4567")})
db.getCollection('goods').remove({ "_id": ObjectId("5bbdbd197099aa06abf6fb1a")})
			]]>
			</screen>
		</section>
	</section>
	
	<section id="count">
		<title>count()</title>
		<screen>
		<![CDATA[
> db.access.count()
51528
> db.access.count()
104401
		]]>
		</screen>
	</section>
	
	&chapter.mongo.query.xml;

	<section id="aggregate">
		<title>aggregate</title>
		<section>
			<title>project</title>
			<section>
				<title>$split</title>
				<screen>
				<![CDATA[
{
	"_id" : ObjectId("591a710320156761bdf68a06"),
	"_class" : "mis.domain.PyramidSelling",
	
	...
	...
	
	"status" : true,
	"createdDate" : ISODate("2017-05-16T03:24:51.511Z")
}
				]]>	
				</screen>
				<screen>
				<![CDATA[
db.getCollection('pyramidSelling').aggregate([
  { $project : { _class : { $split: ["$_class", "."] } } }
]);			
				]]>
				</screen>
			</section>
			<section>
				<title>substr</title>
				<screen>
				<![CDATA[
db.getCollection('pyramidSelling').aggregate(
[
	{
	$project: {
		userName: 1,
			phone: {
				prefix: { $substr: [ "$phone", 0, 3 ] },
				mobile: { $substr: [ "$phone", 3, 11 ] }
			},
		}
	}
]
)
				]]>
				</screen>
			</section>
		</section>
		<section id="groupby">
			<title>groupby + sum</title>
			<para>select username, sum(balance) as total from users group by member.</para>
			<screen>
			<![CDATA[
db.member.aggregate([{ 
    $group: { 
        _id: "$username", 
        total: { $sum: "$balance" }
    } 
}])
			]]>
			</screen>
		</section>
	</section>
	 &chapter.mongo.indexes.xml;
	 &chapter.mongo.mapreduce.xml;

	<section>
		<title>内嵌对象</title>
		<section id="">
			<title>Array / List 列表类型</title>
			<screen>
			<![CDATA[
db.foo.save(
{
	'name':'neo',
	'address':[{'city':'shenzhen','post':"518000"}, {'city':'heilongjiang','post':"135000"}],
	'phone':["13113668800","13322993040","13266884444"]
}
)
			]]>
			</screen>
			<screen>
			<![CDATA[
{
    "_id" : ObjectId("5bbefed1b04a8c0d7395d1b5"),
    "name" : "neo",
    "address" : [ 
        {
            "city" : "shenzhen",
            "post" : "518000"
        }, 
        {
            "city" : "heilongjiang",
            "post" : "135000"
        }
    ],
    "phone" : [ 
        "13113668800", 
        "13322993040", 
        "13266884444"
    ]
}	
			]]>
			</screen>
			<para>删除数组元素</para>
			<screen>
			<![CDATA[
db.getCollection('foo').update({"_id":ObjectId("5bbeff40b04a8c0d7395d1b6")},{"$pull":{"phone":"13266884444"}})		
			]]>
			</screen>
			<para>删除数组中的对象</para>
			<screen>
			<![CDATA[
db.getCollection('foo').update({"_id":ObjectId("5bbeff40b04a8c0d7395d1b6")},{"$pull":{"address":{"city":"heilongjiang"}}})
			]]>
			</screen>
			<para>查找替换</para>
			<screen>
			<![CDATA[
db.getCollection('foo').update({"address.city":"shenzhen"},{"$set":{"address.$.post":"000000"}})			
			]]>
			</screen>
		</section>
	</section>

	<section id="mongodb.script">
		<title>Javascript 脚本</title>
		<programlisting>
	 	<![CDATA[
db.numbers.drop()

var counter = 0
while (counter<=1000){
  db.numbers.save({"value":counter})
  counter = counter + 1;
}
	 	]]>
		</programlisting>
	</section>
</chapter>