<?xml version="1.0" encoding="UTF-8"?>
<section id="shell">
	<title>MongoDB Shell</title>
	<section id="show">
		<title>show 查看命令</title>
		<section>
			<title>show dbs</title>
			<para>show dbs                     show database names</para>
			<screen>
			<![CDATA[
> show dbs
local	(empty)
logging	0.203125GB
test	0.203125GB
			]]>
			</screen>
		</section>
		<section>
			<title>show collections</title>
			<para>show collections             show collections in current database</para>
			<screen>
			<![CDATA[

> show collections
bios
system.indexes
			]]>
			</screen>
			<para>另一种用法是show tables</para>
			<screen>
			<![CDATA[
> show tables
bios
system.indexes
			]]>
			</screen>
		</section>
		<section>
			<title>show users</title>
			<para>show users                   show users in current database</para>
			<screen>
			<![CDATA[

			]]>
			</screen>
		</section>
		<section>
			<title>show profile</title>
			<para>show profile                 show most recent system.profile entries with time >= 1ms</para>
			<screen>
			<![CDATA[
> show profile
db.system.profile is empty
Use db.setProfilingLevel(2) will enable profiling
Use db.system.profile.find() to show raw profile entries
			]]>
			</screen>
		</section>
	</section>
	<section id="use">
		<title>切换数据库</title>
		<screen>
		<![CDATA[
use <db name>                set curent database to <db name>

> use logging
switched to db logging
		]]>
		</screen>
	</section>
	<section>
		<title>save</title>
		<para>存储嵌套的对象</para>
		<screen>
		<![CDATA[
db.foo.save({'name':'neo','address':{'city':'shenzhen','post':518000},'phone':[13113668890,13322993040]})
		]]>
		</screen>
		<para>存储数组对象</para>
		<screen>
		<![CDATA[
db.foo.save({'Uid':'netkiller@msn.com','phone':['13322993040','13113668890']})
		]]>
		</screen>
	</section>
	<section>
		<title>insert</title>
		<screen>
		<![CDATA[
db.bios.insert(
   {
     _id: 1,
     name: { first: 'John', last: 'Backus' },
     birth: new Date('Dec 03, 1924'),
     death: new Date('Mar 17, 2007'),
     contribs: [ 'Fortran', 'ALGOL', 'Backus-Naur Form', 'FP' ],
     awards: [
               {
                 award: 'W.W. McDowell Award',
                 year: 1967,
                 by: 'IEEE Computer Society'
               },
               {
                 award: 'National Medal of Science',
                 year: 1975,
                 by: 'National Science Foundation'
               },
               {
                 award: 'Turing Award',
                 year: 1977,
                 by: 'ACM'
               },
               {
                 award: 'Draper Prize',
                 year: 1993,
                 by: 'National Academy of Engineering'
               }
             ]
   }
)
		]]>
		</screen>
	</section>
	<section>
		<title>update</title>
		<para>根据query条件修改，如果不存在则插入，允许修改多条记录</para>
		<screen>
db.foo.update({'yy':5},{'$set':{'xx':2}},upsert=true,multi=true)
		</screen>
	</section>
	<section id="remove">
		<title>remove</title>
		<para>删除uid=10的记录</para>
		<screen>
		<![CDATA[
db.foo.remove({'uid':10})
		]]>
		</screen>
		<para>删除所有的记录</para>
		<screen>
db.foo.remove()
		</screen>
		<section>
			<title>删除条件使用 _id </title>
			<screen>
db.foo.remove({ "_id" : ObjectId("56e10b66a22ef1b1408b4567")})
			</screen>
		</section>
	</section>
	
	<section>
		<title>count()</title>
		<screen>
		<![CDATA[
> db.access.count()
51528
> db.access.count()
104401
		]]>
		</screen>
	</section>
	<section>
		<title>group()</title>
		<para>group()类似SQL中的Group by</para>
		<screen>
		<![CDATA[
> db.test.group({key: {remote_addr: true}, initial: {count: 0}, reduce: function(obj, prev) {prev.count++}});
[
	{
		"remote_addr" : "192.168.2.76",
		"count" : 3
	},
	{
		"remote_addr" : "192.168.2.70",
		"count" : 1
	}
]
		]]>
		</screen>
	</section>
	
	&chapter.mongo.query.xml;

	<section id="bson">
		<title>管道操作</title>
		<screen>
		<![CDATA[
cat data.bson | mongo test
		]]>
		</screen>
	</section>
	
	
	
	<section id="shutdownServer">
		<title>shutdownServer</title>
		<para>关闭MongoDB数据库</para>
		<screen>
		<![CDATA[
db.shutdownServer()
		]]>
		</screen>
	</section>

	<section id="aggregate">
		<title>aggregate</title>
		<section>
			<title>project</title>
			<section>
				<title>$split</title>		
				<screen>
{
    "_id" : ObjectId("591a710320156761bdf68a06"),
    "_class" : "mis.domain.PyramidSelling",

	...
	...

    "status" : true,
    "createdDate" : ISODate("2017-05-16T03:24:51.511Z")
}			
				</screen>
				<screen>
				<![CDATA[
db.getCollection('pyramidSelling').aggregate([
  { $project : { _class : { $split: ["$_class", "."] } } }
]);			
				]]>
				</screen>
			</section>
			<section>
				<title>substr</title>
				<screen>
db.getCollection('pyramidSelling').aggregate(
   [
      {
         $project: {
            userName: 1,
            phone: {
               prefix: { $substr: [ "$phone", 0, 3 ] },
               mobile: { $substr: [ "$phone", 3, 11 ] }
            },
         }
      }
   ]
)				
				</screen>
			</section>
		</section>
		<section id="groupby">
			<title>groupby + sum</title>
			<para>select username, sum(balance) as total from users group by member.</para>
			<screen>
			<![CDATA[
db.member.aggregate([{ 
    $group: { 
        _id: "$username", 
        total: { $sum: "$balance" }
    } 
}])
			]]>
			</screen>
		</section>
	</section>
	
</section>