<?xml version="1.0" encoding="UTF-8"?>
<chapter id="index"><?dbhtml dir="cassandra" ?>
	<title>Cassandra</title>
	<chapterinfo>
		<keywordset>
			<keyword>Cassandra, NoSQL, Key-Value</keyword>
		</keywordset>
	</chapterinfo>
	<para>http://incubator.apache.org/cassandra/</para>
	<section id="cassandra.started">
		<title>Getting Started</title>
		<section>
			<title>Downloading and Installation</title>

		<para>$ cd /srv/</para>
		<screen>
		<![CDATA[
$ cd /usr/local/src/

$ sudo wget -c http://apache.freelamp.com/cassandra/0.5.1/apache-cassandra-0.5.1-bin.tar.gz
$ sudo tar zxvf apache-cassandra-0.5.1-bin.tar.gz
$ cp -r /usr/local/src/apache-cassandra-0.5.1 /srv/
$ cd /srv/
$ sudo ln -s apache-cassandra-0.5.1 apache-cassandra
$ cd apache-cassandra
		]]>
		</screen>
		</section>
		<section>
			<title>Running Cassandra</title>
		<para>Running Cassandra</para>
		<screen>
		<![CDATA[
$ bin/cassandra
$ Listening for transport dt_socket at address: 8888
INFO - Saved Token not found. Using 70882909557229809272696372631016976044
INFO - Starting up server gossip
		]]>
		</screen>
		</section>
		<section>
			<title>cli tool</title>
		<para>cli</para>
		<command>$ bin/cassandra-cli</command>
		<screen>
		<![CDATA[
neo@db:/srv/apache-cassandra$ bin/cassandra-cli
Welcome to cassandra CLI.

Type 'help' or '?' for help. Type 'quit' or 'exit' to quit.
cassandra>
		]]>
		</screen>
		<para></para>
		<screen>
		<![CDATA[
cassandra> connect localhost/9160
Connected to localhost/9160
		]]>
		</screen>
		</section>
		<section>
			<title>Testing Cassandra</title>
		<para>test</para>
		<screen>
		<![CDATA[
cassandra> show keyspaces
Keyspace1
system
		]]>
		</screen>
		<para>insert value</para>
		<screen>
		<![CDATA[
cassandra> set Keyspace1.Standard1['member']['name']='neo'
Value inserted.
cassandra> set Keyspace1.Standard1['member']['age']='27'
Value inserted.
cassandra> set Keyspace1.Standard1['member']['email']='openunix@163.com'
Value inserted.
cassandra>
cassandra> get Keyspace1.Standard1['member']
=> (column=name, value=neo, timestamp=1271070497471)
=> (column=email, value=openunix@163.com, timestamp=1271070498334)
=> (column=age, value=27, timestamp=1271070497519)
Returned 3 results.
cassandra>
		]]>
		</screen>
		</section>
	</section>
	<section id="cassandra.configure">
		<title>Configure Cassandra</title>
		<section>
			<title>Envionment variables</title>
			<screen>
CASSANDRA_HOME=/srv/apache-cassandra
			</screen>
		</section>
		<section>
			<title>log4j.properties</title>
			<screen>
[root@db apache-cassandra]# vim conf/log4j.properties
log4j.appender.R=org.apache.log4j.RollingFileAppender
log4j.appender.file.maxFileSize=20MB
log4j.appender.file.maxBackupIndex=50
log4j.appender.R.layout=org.apache.log4j.PatternLayout
log4j.appender.R.layout.ConversionPattern=%5p [%t] %d{ISO8601} %F (line %L) %m%n
# Edit the next line to point to your logs directory
log4j.appender.R.File=/var/log/cassandra/system.log

# Application logging options
#log4j.logger.com.facebook=DEBUG
#log4j.logger.com.facebook.infrastructure.gms=DEBUG
#log4j.logger.com.facebook.infrastructure.db=DEBUG
			</screen>
		</section>
		<section>
			<title>storage-conf.xml</title>
			<screen>
			<![CDATA[
[root@db apache-cassandra]# vim conf/storage-conf.xml
			]]>
			</screen>
		</section>
	</section>
	<section id="cassandra.keyspace">
		<title>Keyspace</title>
		<section>
			<title>Schema</title>
			<section>
				<title>Keyspace</title>
			</section>
			<section>
				<title>Column family</title>
				<section>
					<title>Name</title>
				</section>
				<section>
					<title>Column</title>
				</section>
				<section>
					<title>Super column</title>
				</section>
				<section>
					<title>Sorting</title>
				</section>
			</section>
		</section>
		<section>
			<title>Keyspace example</title>
			<example>
				<title>Twitter</title>
				<screen>
				<![CDATA[
<Keyspace Name="Twitter">
<ColumnFamily CompareWith="UTF8Type" Name="Statuses" />
<ColumnFamily CompareWith="UTF8Type" Name="StatusAudits" />
<ColumnFamily CompareWith="UTF8Type" Name="StatusRelationships"
CompareSubcolumnsWith="TimeUUIDType" ColumnType="Super" />
<ColumnFamily CompareWith="UTF8Type" Name="Users" />
<ColumnFamily CompareWith="UTF8Type" Name="UserRelationships"
CompareSubcolumnsWith="TimeUUIDType" ColumnType="Super" />
</Keyspace>
				]]>
				</screen>
			</example>
			<example>
				<title>Twissandra</title>
				<screen>
				<![CDATA[
  <Keyspaces>
    <Keyspace Name="Twissandra">
       <ColumnFamily CompareWith="UTF8Type" Name="User"/>
      <ColumnFamily CompareWith="BytesType" Name="Username"/>
      <ColumnFamily CompareWith="BytesType" Name="Friends"/>
      <ColumnFamily CompareWith="BytesType" Name="Followers"/>
      <ColumnFamily CompareWith="UTF8Type" Name="Tweet"/>
      <ColumnFamily CompareWith="LongType" Name="Timeline"/>
      <ColumnFamily CompareWith="LongType" Name="Userline"/>

      <ReplicaPlacementStrategy>org.apache.cassandra.locator.RackUnawareStrategy</ReplicaPlacementStrategy>

      <!-- Number of replicas of the data -->
      <ReplicationFactor>1</ReplicationFactor>
      <EndPointSnitch>org.apache.cassandra.locator.EndPointSnitch</EndPointSnitch>

    </Keyspace>
  </Keyspaces>
  				]]>
				</screen>
				<para>Schema Layout</para>
				<para>In Cassandra, the way that your data is structured is very closely tied to how how it will be retrieved. Let's start with the user ColumnFamily. The key is a user id, and the columns are the properties on the user:</para>
				<screen>
User = {
    'a4a70900-24e1-11df-8924-001ff3591711': {
        'id': 'a4a70900-24e1-11df-8924-001ff3591711',
        'username': 'ericflo',
        'password': '****',
    },
}
				</screen>
				<para>Since some of the URLs on the site actually have the username, we need to be able to map from the username to the user id:</para>
				<screen>
Username = {
    'ericflo': {
        'id': 'a4a70900-24e1-11df-8924-001ff3591711',
    },
}
				</screen>
				<para>Friends and followers are keyed by the user id, and then the columns are the friend user id and follower user ids, and we store a timestamp as the value because it's interesting information to have:</para>
				<screen>
Friends = {
    'a4a70900-24e1-11df-8924-001ff3591711': {
        # friend id: timestamp of when the friendship was added
        '10cf667c-24e2-11df-8924-001ff3591711': '1267413962580791',
        '343d5db2-24e2-11df-8924-001ff3591711': '1267413990076949',
        '3f22b5f6-24e2-11df-8924-001ff3591711': '1267414008133277',
    },
}

Followers = {
    'a4a70900-24e1-11df-8924-001ff3591711': {
        # friend id: timestamp of when the followership was added
        '10cf667c-24e2-11df-8924-001ff3591711': '1267413962580791',
        '343d5db2-24e2-11df-8924-001ff3591711': '1267413990076949',
        '3f22b5f6-24e2-11df-8924-001ff3591711': '1267414008133277',
    },
}
				</screen>
				<para>Tweets are stored in a way similar to users:</para>
				<screen>
Tweet = {
    '7561a442-24e2-11df-8924-001ff3591711': {
        'id': '89da3178-24e2-11df-8924-001ff3591711',
        'user_id': 'a4a70900-24e1-11df-8924-001ff3591711',
        'body': 'Trying out Twissandra. This is awesome!',
        '_ts': '1267414173047880',
    },
}
				</screen>
				<para>The Timeline and Userline column families keep track of which tweets should appear, and in what order. To that effect, the key is the user id, the column name is a timestamp, and the column value is the tweet id:</para>
				<screen>
Timeline = {
    'a4a70900-24e1-11df-8924-001ff3591711': {
        # timestamp of tweet: tweet id
        1267414247561777: '7561a442-24e2-11df-8924-001ff3591711',
        1267414277402340: 'f0c8d718-24e2-11df-8924-001ff3591711',
        1267414305866969: 'f9e6d804-24e2-11df-8924-001ff3591711',
        1267414319522925: '02ccb5ec-24e3-11df-8924-001ff3591711',
    },
}

Userline = {
    'a4a70900-24e1-11df-8924-001ff3591711': {
        # timestamp of tweet: tweet id
        1267414247561777: '7561a442-24e2-11df-8924-001ff3591711',
        1267414277402340: 'f0c8d718-24e2-11df-8924-001ff3591711',
        1267414305866969: 'f9e6d804-24e2-11df-8924-001ff3591711',
        1267414319522925: '02ccb5ec-24e3-11df-8924-001ff3591711',
    },
}
				</screen>
			</example>
		</section>
	</section>
	<section id="cassandra.cluster">
		<title>Cluster</title>
		<section>
			<title>Running a cluster</title>
			<screen>
			<![CDATA[
<Seed>127.0.0.1</Seed>
			]]>
			</screen>
			<para>改为</para>
			<screen>
			<![CDATA[
<Seed>172.16.0.1</Seed>
			]]>
			</screen>
			<screen>
			<![CDATA[

			]]>
			</screen>
			<para></para>
			<screen>
			<![CDATA[
  <ListenAddress>localhost</ListenAddress>
改为：
  <ListenAddress>172.16.0.1</ListenAddress>
  			]]>
    		</screen>
			<screen>
			<![CDATA[
    <ThriftAddress>localhost</ThriftAddress>
改为：
    <ThriftAddress>0.0.0.0</ThriftAddress>
    		]]>
    		</screen>
			<command>$ bin/cassandra</command>
		</section>
		<section>
			<title>Running a single node</title>
			<screen>
			<![CDATA[
<Seed>127.0.0.1</Seed>
			]]>
			</screen>
			<para>改为</para>
			<screen>
			<![CDATA[
<Seed>172.16.0.2</Seed>
			]]>
			</screen>
			<screen>
			<![CDATA[
  <Seeds>
      <Seed>172.16.0.1</Seed>
      <Seed>172.16.0.2</Seed>
      <Seed>172.16.0.3</Seed>
      <Seed>172.16.0.4</Seed>
      <Seed>172.16.0.5</Seed>
  </Seeds>
			]]>
			</screen>
			<para></para>
			<screen>
			<![CDATA[
  <ListenAddress>localhost</ListenAddress>
改为：
  <ListenAddress>172.16.0.2</ListenAddress>
  			]]>
    		</screen>
			<screen>
			<![CDATA[
    <ThriftAddress>localhost</ThriftAddress>
改为：
    <ThriftAddress>0.0.0.0</ThriftAddress>
    		]]>
    		</screen>
			<command>$ bin/cassandra</command>
		</section>
		<section>
			<title>nodetool</title>
			<screen>
nodeprobe -host 172.16.0.1 ring
			</screen>
		</section>
	</section>
</chapter>
