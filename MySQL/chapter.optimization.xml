<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: chapter.optimization.xml 572 2013-04-24 05:37:11Z netkiller $ -->
<chapter id="index"><?dbhtml dir="optimization"?>
	<title>Optimization</title>
	<section id="limit">
		<title>Limit 状态</title>
		<screen>
		<![CDATA[
$ sudo cat /proc/`pidof mysqld`/limits
Limit                     Soft Limit           Hard Limit           Units     
Max cpu time              unlimited            unlimited            seconds   
Max file size             unlimited            unlimited            bytes     
Max data size             unlimited            unlimited            bytes     
Max stack size            10485760             unlimited            bytes     
Max core file size        0                    unlimited            bytes     
Max resident set          unlimited            unlimited            bytes     
Max processes             62662                62662                processes 
Max open files            20480                20480                files     
Max locked memory         65536                65536                bytes     
Max address space         unlimited            unlimited            bytes     
Max file locks            unlimited            unlimited            locks     
Max pending signals       62662                62662                signals   
Max msgqueue size         819200               819200               bytes     
Max nice priority         0                    0                    
Max realtime priority     0                    0                    
Max realtime timeout      unlimited            unlimited            us   		
		]]>
		</screen>
	</section>
	<section id="mysql.btrfs">
		<title>使用 Btrfs 文件系统存储mysql数据</title>
		<screen>
		<![CDATA[
#!/bin/sh
systemctl stop mysqld

btrfs subvolume create /srv/@mysql
btrfs subvolume list /srv/

UUID=$(blkid | grep btrfs | sed -e 's/.*UUID="\([^"]*\)".*/\1/')
# UUID=786f570d-fe5c-4d5f-832a-c1b0963dd4e6 /srv btrfs defaults 1 1
cat << EOF >> /etc/fstab
UUID=${UUID} /var/lib/mysql  btrfs   noatime,nodiratime,subvol=@mysql 0 2
EOF

mkdir /tmp/mysql
mv /var/lib/mysql/* /tmp/mysql/

mount /var/lib/mysql/
chown mysql:mysql /var/lib/mysql

mv /tmp/mysql/* /var/lib/mysql/

systemctl start mysqld
		]]>
		</screen>
	</section>
	<section>
		<title>打开表的数量</title>
		<screen>
		<![CDATA[
mysql> SHOW STATUS LIKE 'open%tables';
+---------------+-------+
| Variable_name | Value |
+---------------+-------+
| Open_tables   | 100   |
| Opened_tables | 1     |
+---------------+-------+
2 rows in set (0.04 sec)		
		]]>
		</screen>
	</section>
	<section id="cache">
		<title>Buffering and Caching</title>
		<para>查看缓存是否开启</para>
		<programlisting>
		<![CDATA[
MySQL> select @@query_cache_type;
MySQL> show variables like 'query_cache_type';
		]]>
		</programlisting>
		<para>开启与关闭缓存</para>
		<programlisting>
		<![CDATA[
MySQL> set query_cache_type=on;
MySQL> set query_cache_type=off;
		]]>
		</programlisting>
		<para>查看缓存状态</para>
		<programlisting>
		<![CDATA[
show variables like 'have_query_cache';		
		]]>
		</programlisting>
		<para>查询缓存的大小</para>
		<programlisting>
		<![CDATA[
MySQL> select @@global.query_cache_size;
MySQL> select @@query_cache_size;
		]]>
		</programlisting>
		<para>查看最大缓存限制，如果集大于该数则不缓存。</para>
		<programlisting>
		<![CDATA[
MySQL> select @@global.query_cache_limit;
		]]>
		</programlisting>
		<para>清除缓存/重置缓存</para>
		<programlisting>
		<![CDATA[
MySQL> flush tables;
MySQL> flush query cache;
MySQL> reset query cache;
		]]>
		</programlisting>
		<para>查询缓存性能</para>
		<programlisting>
		<![CDATA[
MySQL> show status like 'qcache%';

MySQL> show status like 'qcache_q%';
+-------------------------+-------+
| Variable_name | Value |
+-------------------------+-------+
| Qcache_queries_in_cache | 1 |
+-------------------------+-------+
1 row in set (0.00 sec)

MySQL> show status like 'qcache_f%';
+--------------------+----------+
| Variable_name | Value |
+--------------------+----------+
| Qcache_free_blocks | 1 |
| Qcache_free_memory | 16766728 |
+--------------------+----------+
2 rows in set (0.00 sec)
		]]>
		</programlisting>
		<section>
			<title>Query Cache SELECT Options</title>
			<programlisting>
			<![CDATA[			
Two query cache-related options may be specified in SELECT statements:

SQL_CACHE

The query result is cached if it is cacheable and the value of the query_cache_type system variable is ON or DEMAND.

SQL_NO_CACHE

The query result is not cached.

Examples:

SELECT SQL_CACHE id, name FROM customer;
SELECT SQL_NO_CACHE id, name FROM customer;


SELECT /*! SQL_NO_CACHE */ stuff FROM table
			]]>
			</programlisting>
			<example>
				<title>SQL_CACHE 测试</title>
				<para>下面的例子中你将看到缓存变化</para>
				<programlisting>
				<![CDATA[
flush tables;
show status like 'qcache_q%';
select sql_cache * from members limit 5;
show status like 'qcache_q%';
select sql_cache * from members limit 10;
show status like 'qcache_q%';
				]]>
				</programlisting>
				<para>显示当前缓存中的信息数量：</para>
				<programlisting>
				<![CDATA[
MySQL> show status like 'qcache_q%';
				]]>
				</programlisting>
				<para>其中各个参数的意义如下：</para>
				<screen>
				<![CDATA[
Qcache_free_blocks：缓存中相邻内存块的个数。数目大说明可能有碎片。FLUSH QUERY CACHE会对缓存中的碎片进行整理，从而得到一个空闲块。
Qcache_free_memory：缓存中的空闲内存。
Qcache_hits：每次查询在缓存中命中时就增大
Qcache_inserts：每次插入一个查询时就增大。命中次数除以插入次数就是不中比率。
Qcache_lowmem_prunes：缓存出现内存不足并且必须要进行清理以便为更多查询提供空间的次数。这个数字最好长时间来看;如果这个 数字在不断增长，就表示可能碎片非常严重，或者内存很少。(上面的 free_blocks和free_memory可以告诉您属于哪种情况)
Qcache_not_cached：不适合进行缓存的查询的数量，通常是由于这些查询不是 SELECT 语句或者用了now()之类的函数。
Qcache_queries_in_cache：当前缓存的查询(和响应)的数量。
Qcache_total_blocks：缓存中块的数量。
				]]>
				</screen>
			</example>
		</section>
	</section>
	<section id="optimization.where">
		<title>where 优化 </title>
		<para>where 条件的顺序影响查询速度</para>
		<screen>
		<![CDATA[		
EXPLAIN select *,from_unixtime(sendtime) from sms where id='461539' and content like '13%';
/* 0 rows affected, 1 rows found. Duration for 1 query: 0.218 sec. */

EXPLAIN select *,from_unixtime(sendtime) from sms where content like '13%' and id='461539';
/* 0 rows affected, 1 rows found. Duration for 1 query: 0.717 sec. */
		]]>
		</screen>
	</section>
	<section id="show.profile">
		<title>SHOW PROFILE Syntax SQL性能分析器</title>
		<example>
			<title>SHOW PROFILE Syntax</title>
			<screen>
			<![CDATA[
set profiling = 1; select * from mytab; show profile for query 1;
			]]>
			</screen>
		</example>

	</section>
	<section>
		<title>PROCEDURE ANALYSE()</title>
		<para>数据列优化</para>
		<screen>
		<![CDATA[
SELECT ... FROM ... WHERE ... PROCEDURE ANALYSE([max_elements,[max_memory]])
		]]>
		</screen>
	</section>
</chapter>
